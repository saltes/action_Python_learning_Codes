# This is a basic workflow to help you get started with Actions

name: action_python

on:
  workflow_dispatch:
    inputs:
      action_code:
        description: 'action_code'
        required: true
        default: '1'

jobs:
  build:
    runs-on: ubuntu-20.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Get the source code of this repositorie...
        uses: actions/checkout@main

      - name: Get variable configuration...
        run: |
          echo "BUILD_TIME=$(date +%s | md5sum | awk '{print substr($1,1,10)}')" >> $GITHUB_ENV
      - name: Clean up the environment‌‌...
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
          sudo -E apt-get update
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          df -h
      - name: Configuration Environment‌‌...
        run: |
          sudo apt-get install -y git wget git zip unzip curl axel
      - name: git python environment‌‌
        run: |
          sudo apt update
          # 列出当前可用的更新
          sudo apt list --upgradable
          # 如上一步提示有可以更新的项目，则执行更新
          sudo apt upgrade
          # 安装 GCC 编译器
          sudo apt install gcc
          # 检查安装是否成功
          gcc -v
          # 若显示出 GCC 版本则成功
          # 刷新软件包目录
          sudo apt update
          # 安装依赖
          sudo apt install build-essential zlib1g-dev libncurses5-dev libgdbm-dev libnss3-dev libssl-dev libreadline-dev libffi-dev libbz2-dev liblzma-dev sqlite3 libsqlite3-dev tk-dev uuid-dev libgdbm-compat-dev
          # 下载 Python 3.9.12
          sudo wget https://www.python.org/ftp/python/3.9.12/Python-3.9.12.tar.xz
          # Runs a set of commands using the runners shell
          # 解压
          tar -xf Python-3.9.12.tar.xz
          # 进入该目录
          cd Python-3.9.12/
          # 检查依赖与配置编译
          sudo ./configure --enable-optimizations --with-lto --enable-shared
      - name: Run python
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
